import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import javax.swing.*;

public class client_server extends JFrame
{
	private Receiver receiver = new Receiver();
	private JTextField sender = new JTextField();
	private BufferedReader in = null;
	private BufferedWriter out = null;
	private Socket socket = null;
	
	public client_server()
	{
		setTitle("클라이언트 페이지");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE );
		Container c = getContentPane();
		c.setLayout(new BorderLayout());
		
		sender.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e)
			{
				String msg = sender.getText();
				try
				{
					out.write(msg);
					out.flush();
				
					receiver.append(msg+'\n');
					int pos = receiver.getText().length();
					receiver.setCaretPosition(pos);
					sender.setText(null);
				}
				catch(IOException e1)
				{
					System.out.print("연결오류");
					System.exit(1);
				}
			}
		});
		c.add(receiver);
		c.add(sender);
		
		setVisible(true);
		setSize(300,300);
		
		try
		{
			setup();// 연결작업
		}
		catch(IOException e)
		{
			System.out.print("연결 오류발생");
			System.exit(1);
		}
		
		Thread th = new Thread(receiver);
		th.start();
	}
	
	private void setup() throws IOException
	{
		socket = new Socket("localhost",9999);//'서버의' 주소와 포트번호
		
		receiver.append("서버에 연결완료"+'\n');
		int pos = receiver.getText().length();
		receiver.setCaretPosition(pos);
		
		in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));	
	}
	
	class Receiver extends JTextArea implements Runnable
	{
		public void run()
		{
			String msg= null;
			while(true)
			{
				try
				{
					msg = in.readLine();
				}
				catch(IOException e)
				{
					System.out.print("연결오류");
					System.exit(1);
				}
				this.append(msg+'\n');
				int pos = this.getText().length();
				this.setCaretPosition(pos);  
			}
		}
	}
	
	public static void main(String[] args) 
	{
		new client_server();
	}
}
